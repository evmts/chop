# GoReleaser configuration for Chop
# Documentation: https://goreleaser.com

# Project information
project_name: chop

# Before hooks - commands to run before building
before:
  hooks:
    # Ensure dependencies are up to date
    - go mod tidy
    # Run tests before release
    - go test ./...

# Build configuration
builds:
  - id: chop
    # Binary name
    binary: chop

    # Main package path
    main: .

    # Environment variables for build
    env:
      - CGO_ENABLED=0

    # Target platforms
    goos:
      - linux
      - darwin
      - windows

    # Target architectures
    goarch:
      - amd64
      - arm64

    # Ignore invalid combinations
    ignore:
      # Windows on ARM64 is less common, exclude if needed
      # - goos: windows
      #   goarch: arm64

    # Build flags
    flags:
      - -trimpath

    # Linker flags - inject version information
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.ShortCommit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser

# Archive configuration
archives:
  - id: chop-archive
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- .Os }}_
      {{- .Arch }}

    # Format: tar.gz for unix, zip for windows
    format_overrides:
      - goos: windows
        format: zip

    # Files to include in the archive
    files:
      - README.md
      - LICENSE*
      - DOCS.md

# Checksum configuration
checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

# Snapshot configuration (for non-tagged builds)
snapshot:
  name_template: "{{ incpatch .Version }}-next"

# Changelog configuration
changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'
      - Merge pull request
      - Merge branch
  groups:
    - title: 'Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: 'Performance improvements'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: 'Refactors'
      regexp: '^.*?refactor(\([[:word:]]+\))??!?:.+$'
      order: 3
    - title: 'Other changes'
      order: 999

# GitHub Release configuration
release:
  # Create a GitHub release
  github:
    owner: evmts
    name: chop

  # Don't create draft releases
  draft: false

  # Don't mark as pre-release automatically
  prerelease: auto

  # Release name template
  name_template: "{{.ProjectName}} {{.Version}}"

  # Footer template for release notes
  footer: |
    ## Installation

    Download the appropriate binary for your platform from the assets below.

    ### macOS
    ```bash
    # Intel Mac
    curl -LO https://github.com/evmts/chop/releases/download/{{ .Tag }}/chop_{{ .Version }}_darwin_amd64.tar.gz
    tar -xzf chop_{{ .Version }}_darwin_amd64.tar.gz
    chmod +x chop
    sudo mv chop /usr/local/bin/

    # Apple Silicon Mac
    curl -LO https://github.com/evmts/chop/releases/download/{{ .Tag }}/chop_{{ .Version }}_darwin_arm64.tar.gz
    tar -xzf chop_{{ .Version }}_darwin_arm64.tar.gz
    chmod +x chop
    sudo mv chop /usr/local/bin/
    ```

    ### Linux
    ```bash
    # AMD64
    curl -LO https://github.com/evmts/chop/releases/download/{{ .Tag }}/chop_{{ .Version }}_linux_amd64.tar.gz
    tar -xzf chop_{{ .Version }}_linux_amd64.tar.gz
    chmod +x chop
    sudo mv chop /usr/local/bin/

    # ARM64
    curl -LO https://github.com/evmts/chop/releases/download/{{ .Tag }}/chop_{{ .Version }}_linux_arm64.tar.gz
    tar -xzf chop_{{ .Version }}_linux_arm64.tar.gz
    chmod +x chop
    sudo mv chop /usr/local/bin/
    ```

    ### Windows
    Download the `.zip` file for your architecture, extract it, and add the executable to your PATH.

    ---

    **Full Changelog**: https://github.com/evmts/chop/compare/{{ .PreviousTag }}...{{ .Tag }}

# Announcement configuration (optional)
# announce:
#   twitter:
#     enabled: true
#     message_template: 'Chop {{ .Tag }} is out! Check it out: {{ .ReleaseURL }}'
